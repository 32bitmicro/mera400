Known bugs:

* CROOK-5: BASIC fails on LIST/SAVE (all kernels)

Atomics:

* timer: acquire/release
* memory: not needed (implicit memory barrier between CPU and IO, no 2nd CPU for now)
* interrupts (rework): acquire/release, HLT exit is a state change (not a part of interrupt system)
* ectl: full fences
* log: acquire/release
* cpu state: acquire/release
* MULTIX: ???
* proper cpu state handling (with atomics) in cpu_*?

Enhancements:

* integrate local console(-s) and debugger into one ncurses user interface
* mem get/put error handling should be done locally (within CPU, within I/O device)
* mem get/put byte is also a CPU-only thing
* mem_load, mem_seg_load is possibly an extension of CP protocol
* deeptrace
* conditional logging

CPU:

* no-elwro configuration
* overlaid elwro/mega
* timings (instructions, memory access, disk latencies, serial lines, ...)

I/O:

* handling no memory for io devices
* cmem
* cchar
* plix
* terminal (console, tcp, serial)
* MULTIX:
  * winchester:
    * one controller for all drives
    * async controller
    * spare sectors area (requires h/w marking sectors as bad and sector addresses)
    * formatting
    * spare area formatting
    * 16-sector transfers

Other:

* configuration rework
* debugger interface
* gnu getopt_long

To clarify:

* 2-cpu configuration

MERA-400 features that em400 does not emulate:

* power failure interrupts (cpu and channel)
* 2-cpu configuration:
  * interrupts
  * gil/giu instructions
  * bit 11 of SR
  * channel interrupt masks for 2 cpus
  * device allocations per cpu
  * multix 2cpu interrupt queue
* memory parity (itself and interrupts)
* interface
* priority based interface reservation
* MULTIX:
  * SOM protocols

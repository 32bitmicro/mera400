Known bugs:

* emulation handles illegal instruction 2nd word argument differently (but does it really matter?)
  (IN/OU z bezpośrednim argumentem normalnym: emulator czyta argument i podczas
  wykonywania instrukcji decyduje o nielegalności w trybie użytkownika, a h/w czyta pierwsze słowo,
  decyduje o nielegalności i ze względu na to, że ten przypadek ustawia XI, to nie jest zwiększany
  IC, przez co argument jest traktowany jako kolejny rozkaz, który może się okazać nielegalny)

Cleanups:

* consistent naming and commands between emu and hw (timer/clock, run/start)
* 16/32-bit RZ
* consistent state idicators (stop/start/wait - run/wait)

Enhancements:

* merge cpu sources for better instruction performance (?)
* graphical interface
* new debugger interface (also graphical?)
* integrate local console(-s) into user interface
* deeptrace
* conditional logging
* configuration rework
* gnu getopt_long
* librarize
* make em400 C++ friendly

CPU:

* review cpu cycle in context of NEF and interrupt handling
* no-elwro configuration
* overlaid elwro/mega configuration
* timings (instructions, memory access, disk latencies, serial lines, ...)

I/O:

* handling no memory for io devices
* cmem
* cchar
* plix
* terminal (console, tcp, serial)
* MULTIX:
  * winchester:
    * one controller for all drives (?)
    * spare sectors area (requires h/w marking sectors as bad and sector addresses)
    * formatting (and handling unformatted drive - requires h/w formatting)
    * spare area formatting (and handling of sector migration - requires h/w work)

To clarify:

* 2-cpu configuration

MERA-400 features that em400 does not emulate:

* power failure interrupts (cpu and channel)
* 2-cpu configuration:
  * interrupts
  * gil/giu instructions
  * bit 11 of SR
  * channel interrupt masks for 2 cpus
  * device allocations per cpu
  * multix 2cpu interrupt queue
* memory parity (itself and interrupts)
* interface:
  * as a communication bus
  * reservation
  * priorities
* MULTIX:
  * SOM protocols

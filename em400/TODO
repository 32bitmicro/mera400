Known bugs:

CPU:

* mega "DONE" handling (?)
* handling no memory for io devices
* timings (instructions, memory access, disk latencies, serial lines, ...)
* IN/OU legal/illegal in user mode
* optional AWP + "software fp"

I/O:

* pthread_join()

* make attach/detach mx funcs
* move cfg_phy to mx
* move cfg_log to mx, make cfg_proto for devices
* move get_status to mx
* mx: review interrupts
* mx: reset
* mx: pthread cleanups after shutdown
* mx: pthread result checks
* mx: mx_decode_cf_log(): MX_SC_E_DIR_MISMATCH device vs. protocol transmission dricetion check

* mx/winch: write
* mx/winch: reset
* mx/winch: format
* mx/winch: format spare
* mx/winch: mind spare area
* mx/winch: handle BASF (and other?) drive

* console terminal
* TCP terminal
* serial terminal

* mx/floppy
* mx/floppy: handle various floppy trypes
* mx/terminal
* mx/printer instead of puncher
* mx/puncher

* cmem: status (untransmitted)

* cmem/9425: reset
* cmem/9425: tsr (status read)
* cmem/9425: tch
* cmem/9425: ntr
* cmem/9425: otr

Debugger:

* operator precedence!
* simplify logging (how?)
* more shortcuts (c-w, c-d, c-k, home, end, ...)
* log shouldn't start new file immediately
* use status bar for panel leds (?)
* inteligent memory view (auto-scroll)
* get rid of memory view?
* scrollable memory views?
* save memory image
* load/save snapshot (?)
* external debugger

Other:

* gnu getopt_long

To clarify:

* 2-cpu configuration

MERA-400 features that em400 does not emulate:

* power failure interrupts (cpu and channel)
* 2-cpu configuration
  * interrupts
  * gil/giu instructions
  * bit 11 of SR
  * channel interrupt masks for 2 cpus
  * device allocations per cpu
* memory parity (itself and interrupts)
* interface
* priority based interface reservation
* operator panel
* MULTIX:
  * SOM protocols
